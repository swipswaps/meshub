[socket]

# listen on this address for UDP packets
address = 0.0.0.0
port    = 3732

# internal: select() timeout
#select_interval_sec = 5

[hub]

# address of the hub
address = 1.2.3.4
port    = 3731

# how frequently we should advertise ourselves to the hub
advert_interval_sec = 15

[vpn]

# absolutely optional
# does not affect anything except log messages
# does not even have to be unique
hostname = client

# how frequently we should ping *each* peer
ping_interval_sec = 15
ping_timeout_sec = 300

# maintenance includes purging timed out peer connections etc.
maintenance_interval_sec = 30

# wait before restarting the VPN after network outages etc.
restart_delay_sec = 30

[tun]

# name of the tun interface
# default: tun%d
interface = tun%d

# address + prefix length of the associated subnet
ipv4_address = 192.168.21.2/24

# Recommended ipv6 address scheme:
# * 8-bit ULA prefix (0xfd)
# * 40-bit routing prefix (randomly generated)
# * 16-bit subnet id
# * 64-bit host id
#
# ipv6_address = fd__:____:____:0000::1/64

[scripts]

# shell scripts
# available variables: $iface, $addr, $prefixlen, $hostname
#
# tun_setup will always be called, and it will be called first (if defined)
# afterwards, ipv4 and ipv6 commands will be executed (in an undefined order)

tun_setup = ip link set $iface up
tun_setup_ipv4 = ip addr add $addr/$prefixlen dev $iface
tun_setup_ipv6 = ip -6 addr add $addr/$prefixlen dev $iface

example_of_a_long_script =
    echo you can indent commands like this;
    echo to get multiple-line scripts

[encryption]

# scheme = fernet|null
scheme = fernet

# generate a PSK using generate_fernet_key.py
psk = <you'll need to generate your own>
